model Profile {
  id String @id @default(ulid())

  // user   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  // userId String

  headline String?
  bio      String? @db.Text

  birthDate DateTime? @db.Date

  locationShort String?
  locations     Location[]

  websiteUrl String? @default("https://example.com")
  links      Json    @default("[]")
  // github, xtwitter, linkedin, youtube, facebook, instagram, threads, tiktok, pinterest

  label     String  @default("DEFAULT")
  language  String  @default("en")
  isPrimary Boolean @default(true)
  isPublic  Boolean @default(true)
  sequence  Int     @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // @@index([userId])
}

model Location {
  id String @id @default(ulid())

  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profileId String

  title String

  country        String?
  state          String?
  city           String?
  zip            String?
  address        String?
  addressDetails String?

  latitude  Float
  longitude Float

  googleMapsUrl  String?
  googlePlacesId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}
